#include <Servo.h>
#include <SoftwareSerial.h>

// Pin Definitions
#define IR_SENSOR_PIN 2  // IR Sensor Digital Pin
#define SERVO_PIN 5      // Servo Motor
#define TRIG_PIN 6       // Ultrasonic Sensor Trigger
#define ECHO_PIN 7       // Ultrasonic Sensor Echo
#define BUZZER_PIN 8     // Buzzer
#define LED_PIN 9        // LED Indicator
#define GSM_TX 10        // GSM TX (Connect to SIM800L RX)
#define GSM_RX 11        // GSM RX (Connect to SIM800L TX)

// Multiple Phone Numbers for SMS Alert
const char* phoneNumbers[] = {"+916758943027", "+913568790458", "+918935279034"};
const int numPhones = sizeof(phoneNumbers) / sizeof(phoneNumbers[0]);

// Object Declarations
Servo myServo;
SoftwareSerial gsm(GSM_TX, GSM_RX);

// Flags and Variables
bool smsSent = false;

void setup() {
    Serial.begin(9600);
    gsm.begin(9600);

    // Pin Modes
    pinMode(IR_SENSOR_PIN, INPUT);
    pinMode(TRIG_PIN, OUTPUT);
    pinMode(ECHO_PIN, INPUT);
    pinMode(BUZZER_PIN, OUTPUT);
    pinMode(LED_PIN, OUTPUT);

    myServo.attach(SERVO_PIN);
    myServo.write(0); // Reset Servo Position

    setupGSM();
}

// Function to Initialize GSM Module
void setupGSM() {
    Serial.println("Initializing GSM...");
    gsm.println("AT");
    delay(1000);

    gsm.println("AT+CMGF=1"); // Set SMS Mode to Text
    delay(1000);

    gsm.println("AT+CREG?");  // Check Network Registration
    delay(1000);

    Serial.println("GSM Initialized!");
}

// Function to Measure Distance using Ultrasonic Sensor
long getDistance() {
    digitalWrite(TRIG_PIN, LOW);
    delayMicroseconds(2);
    digitalWrite(TRIG_PIN, HIGH);
    delayMicroseconds(10);
    digitalWrite(TRIG_PIN, LOW);

    long duration = pulseIn(ECHO_PIN, HIGH);
    long distance = duration * 0.034 / 2; // Convert to cm
    return distance;
}

// Function to Send SMS Alert
void sendSMS() {
    if (smsSent) return; // Prevent multiple SMS
    Serial.println("Sending SMS...");
    gsm.println("AT+CMGF=1");
    delay(1000);

    for (int i = 0; i < numPhones; i++) {
        Serial.print("Sending SMS to: ");
        Serial.println(phoneNumbers[i]);

        gsm.print("AT+CMGS=\"");
        gsm.print(phoneNumbers[i]);
        gsm.println("\"");
        delay(1000);

        gsm.println("⚠ Warning: Object detected near a pothole! 🚨");
        delay(1000);

        gsm.write(26); // CTRL+Z to Send SMS
        delay(5000);

        gsm.flush(); // Clear Serial Buffer
        Serial.println("SMS Sent!");
    }
    smsSent = true; // Prevent Resending
}

void loop() {
    // IR Sensor - Servo Activation
    if (digitalRead(IR_SENSOR_PIN) == LOW) {
        Serial.println("🚦 IR Sensor Triggered! Moving Servo...");
        myServo.attach(SERVO_PIN);
        myServo.write(90);
        delay(1000);
        myServo.write(0);
        myServo.detach(); // Reduce Power Usage
    }

    // Ultrasonic Sensor - Buzzer & LED Alert
    long distance = getDistance();
    Serial.print("📏 Distance: ");
    Serial.print(distance);
    Serial.println(" cm");

    if (distance < 10) {
        Serial.println("🚨 Object Detected! Activating Alerts...");

        digitalWrite(BUZZER_PIN, HIGH);
        digitalWrite(LED_PIN, HIGH);
        sendSMS();

        delay(3000);
        digitalWrite(BUZZER_PIN, LOW);
        digitalWrite(LED_PIN, LOW);
    } else {
        smsSent = false; // Reset SMS Flag if clear
    }

    delay(500);
}
